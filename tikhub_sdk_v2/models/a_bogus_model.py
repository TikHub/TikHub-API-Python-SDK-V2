# coding: utf-8

"""
    TikHub.io - Your Ultimate Social Media Data & API Marketplace

    High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from tikhub_sdk_v2.configuration import Configuration


class ABogusModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'url': 'str',
        'data': 'str',
        'user_agent': 'str',
        'index_0': 'int',
        'index_1': 'int',
        'index_2': 'int'
    }

    attribute_map = {
        'url': 'url',
        'data': 'data',
        'user_agent': 'user_agent',
        'index_0': 'index_0',
        'index_1': 'index_1',
        'index_2': 'index_2'
    }

    def __init__(self, url=None, data=None, user_agent=None, index_0=0, index_1=1, index_2=14, local_vars_configuration=None):  # noqa: E501
        """ABogusModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._url = None
        self._data = None
        self._user_agent = None
        self._index_0 = None
        self._index_1 = None
        self._index_2 = None
        self.discriminator = None

        self.url = url
        self.data = data
        self.user_agent = user_agent
        if index_0 is not None:
            self.index_0 = index_0
        if index_1 is not None:
            self.index_1 = index_1
        if index_2 is not None:
            self.index_2 = index_2

    @property
    def url(self):
        """Gets the url of this ABogusModel.  # noqa: E501

        Url，请求的API URL，需要使用urlencode(url, safe='*')进行编码 | The requested API URL, needs to be encoded using urlencode(url, safe='*')  # noqa: E501

        :return: The url of this ABogusModel.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ABogusModel.

        Url，请求的API URL，需要使用urlencode(url, safe='*')进行编码 | The requested API URL, needs to be encoded using urlencode(url, safe='*')  # noqa: E501

        :param url: The url of this ABogusModel.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and url is None:  # noqa: E501
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    @property
    def data(self):
        """Gets the data of this ABogusModel.  # noqa: E501

        Data，POST请求API时的载荷数据，需要使用urlencode(data, safe='*')进行编码 | The payload data when requesting the API with POST, needs to be encoded using urlencode(data, safe='*')  # noqa: E501

        :return: The data of this ABogusModel.  # noqa: E501
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ABogusModel.

        Data，POST请求API时的载荷数据，需要使用urlencode(data, safe='*')进行编码 | The payload data when requesting the API with POST, needs to be encoded using urlencode(data, safe='*')  # noqa: E501

        :param data: The data of this ABogusModel.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and data is None:  # noqa: E501
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data

    @property
    def user_agent(self):
        """Gets the user_agent of this ABogusModel.  # noqa: E501

        User Agent，请求API时的User-Agent | User-Agent when requesting the API  # noqa: E501

        :return: The user_agent of this ABogusModel.  # noqa: E501
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this ABogusModel.

        User Agent，请求API时的User-Agent | User-Agent when requesting the API  # noqa: E501

        :param user_agent: The user_agent of this ABogusModel.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and user_agent is None:  # noqa: E501
            raise ValueError("Invalid value for `user_agent`, must not be `None`")  # noqa: E501

        self._user_agent = user_agent

    @property
    def index_0(self):
        """Gets the index_0 of this ABogusModel.  # noqa: E501

        Index 0，加密明文列表的第一个值，无特殊要求，默认为0  # noqa: E501

        :return: The index_0 of this ABogusModel.  # noqa: E501
        :rtype: int
        """
        return self._index_0

    @index_0.setter
    def index_0(self, index_0):
        """Sets the index_0 of this ABogusModel.

        Index 0，加密明文列表的第一个值，无特殊要求，默认为0  # noqa: E501

        :param index_0: The index_0 of this ABogusModel.  # noqa: E501
        :type: int
        """

        self._index_0 = index_0

    @property
    def index_1(self):
        """Gets the index_1 of this ABogusModel.  # noqa: E501

        Index 1，加密明文列表的第一个值，无特殊要求，默认为1  # noqa: E501

        :return: The index_1 of this ABogusModel.  # noqa: E501
        :rtype: int
        """
        return self._index_1

    @index_1.setter
    def index_1(self, index_1):
        """Sets the index_1 of this ABogusModel.

        Index 1，加密明文列表的第一个值，无特殊要求，默认为1  # noqa: E501

        :param index_1: The index_1 of this ABogusModel.  # noqa: E501
        :type: int
        """

        self._index_1 = index_1

    @property
    def index_2(self):
        """Gets the index_2 of this ABogusModel.  # noqa: E501

        Index 2，加密明文列表的第一个值，无特殊要求，默认为14  # noqa: E501

        :return: The index_2 of this ABogusModel.  # noqa: E501
        :rtype: int
        """
        return self._index_2

    @index_2.setter
    def index_2(self, index_2):
        """Sets the index_2 of this ABogusModel.

        Index 2，加密明文列表的第一个值，无特殊要求，默认为14  # noqa: E501

        :param index_2: The index_2 of this ABogusModel.  # noqa: E501
        :type: int
        """

        self._index_2 = index_2

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ABogusModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ABogusModel):
            return True

        return self.to_dict() != other.to_dict()
