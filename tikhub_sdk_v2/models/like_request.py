# coding: utf-8

"""
    TikHub.io - Your Ultimate Social Media Data & API Marketplace

    High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from tikhub_sdk_v2.configuration import Configuration


class LikeRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'aweme_id': 'str',
        'cookie': 'str',
        'device_id': 'str',
        'iid': 'str',
        'proxy': 'str'
    }

    attribute_map = {
        'aweme_id': 'aweme_id',
        'cookie': 'cookie',
        'device_id': 'device_id',
        'iid': 'iid',
        'proxy': 'proxy'
    }

    def __init__(self, aweme_id='7419966340443819295', cookie='Your_Cookie_From_Browser', device_id='', iid='', proxy='', local_vars_configuration=None):  # noqa: E501
        """LikeRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._aweme_id = None
        self._cookie = None
        self._device_id = None
        self._iid = None
        self._proxy = None
        self.discriminator = None

        if aweme_id is not None:
            self.aweme_id = aweme_id
        if cookie is not None:
            self.cookie = cookie
        if device_id is not None:
            self.device_id = device_id
        if iid is not None:
            self.iid = iid
        if proxy is not None:
            self.proxy = proxy

    @property
    def aweme_id(self):
        """Gets the aweme_id of this LikeRequest.  # noqa: E501

        AKA Video ID，Video ID, which can be obtained from the sharing link, for example: https://www.tiktok.com/@username/video/7419966340443819295  # noqa: E501

        :return: The aweme_id of this LikeRequest.  # noqa: E501
        :rtype: str
        """
        return self._aweme_id

    @aweme_id.setter
    def aweme_id(self, aweme_id):
        """Sets the aweme_id of this LikeRequest.

        AKA Video ID，Video ID, which can be obtained from the sharing link, for example: https://www.tiktok.com/@username/video/7419966340443819295  # noqa: E501

        :param aweme_id: The aweme_id of this LikeRequest.  # noqa: E501
        :type: str
        """

        self._aweme_id = aweme_id

    @property
    def cookie(self):
        """Gets the cookie of this LikeRequest.  # noqa: E501

        User Cookie，User Cookie, you can log in to your TikTok account in the browser and then copy the Cookie information, please use URL-encoded Cookie string when submitting.  # noqa: E501

        :return: The cookie of this LikeRequest.  # noqa: E501
        :rtype: str
        """
        return self._cookie

    @cookie.setter
    def cookie(self, cookie):
        """Sets the cookie of this LikeRequest.

        User Cookie，User Cookie, you can log in to your TikTok account in the browser and then copy the Cookie information, please use URL-encoded Cookie string when submitting.  # noqa: E501

        :param cookie: The cookie of this LikeRequest.  # noqa: E501
        :type: str
        """

        self._cookie = cookie

    @property
    def device_id(self):
        """Gets the device_id of this LikeRequest.  # noqa: E501

        Device ID，Device id, optional, if not filled in, it will be automatically generated, if you need to customize the device id, please use the device information interface to get the device id.  # noqa: E501

        :return: The device_id of this LikeRequest.  # noqa: E501
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this LikeRequest.

        Device ID，Device id, optional, if not filled in, it will be automatically generated, if you need to customize the device id, please use the device information interface to get the device id.  # noqa: E501

        :param device_id: The device_id of this LikeRequest.  # noqa: E501
        :type: str
        """

        self._device_id = device_id

    @property
    def iid(self):
        """Gets the iid of this LikeRequest.  # noqa: E501

        Device Install ID，Device install id, optional, if not filled in, it will be automatically generated, if you need to customize the device iid, please use the device information interface to get the device iid.  # noqa: E501

        :return: The iid of this LikeRequest.  # noqa: E501
        :rtype: str
        """
        return self._iid

    @iid.setter
    def iid(self, iid):
        """Sets the iid of this LikeRequest.

        Device Install ID，Device install id, optional, if not filled in, it will be automatically generated, if you need to customize the device iid, please use the device information interface to get the device iid.  # noqa: E501

        :param iid: The iid of this LikeRequest.  # noqa: E501
        :type: str
        """

        self._iid = iid

    @property
    def proxy(self):
        """Gets the proxy of this LikeRequest.  # noqa: E501

        Proxy IP，Proxy IP, optional, if not filled in, it will be automatically generated, if you need to customize the proxy IP, please use the proxy IP interface to get the proxy IP.  # noqa: E501

        :return: The proxy of this LikeRequest.  # noqa: E501
        :rtype: str
        """
        return self._proxy

    @proxy.setter
    def proxy(self, proxy):
        """Sets the proxy of this LikeRequest.

        Proxy IP，Proxy IP, optional, if not filled in, it will be automatically generated, if you need to customize the proxy IP, please use the proxy IP interface to get the proxy IP.  # noqa: E501

        :param proxy: The proxy of this LikeRequest.  # noqa: E501
        :type: str
        """

        self._proxy = proxy

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LikeRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LikeRequest):
            return True

        return self.to_dict() != other.to_dict()
